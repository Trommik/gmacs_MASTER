<UserControl x:Class="UI.Desktop.GeneratorControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="600"
             DataContext="{Binding Generator, Mode=OneWay, Source={StaticResource Locator}}">



    <Grid >
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="5"/>
            <ColumnDefinition Width="2*"/>
        </Grid.ColumnDefinitions>


        <GroupBox Header="Generator Options:">

            <ScrollViewer Grid.Column="0" VerticalScrollBarVisibility="Auto" Padding="0,0,5,0">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="10"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    
                    
                    <!--Row with GENERATOR TYPE Combobox-->
                    <Label Grid.Column="0" Grid.Row="0" Content="Type:" VerticalAlignment="Center" />
                    <ComboBox Grid.Column="2" Grid.Row="0" SelectedItem="{Binding GeneratorModel.Info, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" ItemsSource="{Binding GeneratorTypesList}" VerticalAlignment="Center" Margin="0,2">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding Text}" />
                                </StackPanel>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>

                    
                    <!--Row with MIX MODE Combobox-->
                    <Label Grid.Column="0" Grid.Row="1" Content="Mixer Mode:" VerticalAlignment="Center" />
                    <ComboBox Grid.Column="2" Grid.Row="1" SelectedItem="{Binding GeneratorModel.MixerType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" ItemsSource="{Binding MixerTypesList}" VerticalAlignment="Center" Margin="0,2"/>

                    
                    <!--Row with SPEED Slider and Labels-->
                    <Label Grid.Column="0" Grid.Row="2" Content="Speed:" VerticalAlignment="Center" />
                    <Grid Grid.Column="2" Grid.Row="2" VerticalAlignment="Center" Margin="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="34"/>
                        </Grid.ColumnDefinitions>

                        <Slider x:Name="SpeedSlider" Grid.Column="0" VerticalAlignment="Center" Value="{Binding GeneratorModel.Speed, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Minimum="0" Maximum="100" Interval="1"/>
                        <Label Content="{Binding ElementName=SpeedSlider, Path=Value}" Grid.Column="1" VerticalAlignment="Center" Margin="3,0,0,0"/>
                    </Grid>

                    
                    <!--Row with LEVEL Slider and Labels-->
                    <Label Grid.Column="0" Grid.Row="3" Content="Level:" VerticalAlignment="Center" />
                    <Grid Grid.Column="2" Grid.Row="3" VerticalAlignment="Center" Margin="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="34"/>
                        </Grid.ColumnDefinitions>

                        <Slider x:Name="LevelSlider" Grid.Column="0" VerticalAlignment="Center" Value="{Binding GeneratorModel.Level, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"  Minimum="0" Maximum="100" Interval="1"/>
                        <Label Content="{Binding ElementName=LevelSlider, Path=Value}" Grid.Column="1" VerticalAlignment="Center" Margin="3,0,0,0"/>
                    </Grid>


                    <!--Row with NAME Textbox and Label-->
                    <Label Grid.Column="0" Grid.Row="4" Content="Name:" VerticalAlignment="Center" />
                    <TextBox Grid.Column="2" Grid.Row="4" Text="{Binding GeneratorModel.Title, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />

                    <!--Row with new tab Button-->
                    <Button Command="{Binding AddNewGeneratorCommand}" Margin="5,7,5,2" Content="Duplicate" Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="5" Controls:ControlsHelper.ContentCharacterCasing="Normal" FontSize="12" FontWeight="Normal" />
                </Grid>
            </ScrollViewer>

        </GroupBox>
        

        <!--TabControl which holds all custom settings for each Generator-->
        <TabControl  ItemsSource="{Binding GeneratorsView}" Grid.Column="2" TabStripPlacement="Top" Background="{DynamicResource Gray4}" BorderBrush="{DynamicResource Gray7}" IsSynchronizedWithCurrentItem="True" >

            <!--Tab Control Item Style-->
            <TabControl.ItemTemplate>
                <DataTemplate>
                    <Grid>
                        <!--Header Stack Panel-->
                        <StackPanel Grid.Column="0" Orientation="Horizontal">

                            <TextBlock Text="{Binding Title, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" Margin="0,0,3,0" FontWeight="Bold" FontSize="16"/>

                            <Button Padding="0" Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=DataContext.DeleteGeneratorCommand}">
                                <!--Button Styling-->
                                <Button.Template>
                                    <ControlTemplate>

                                        <!--Close Icon Rectangle Styling-->
                                        <Rectangle Margin="2" Width="12" Height="12">

                                            <!--Set the Icon Color to the default-->
                                            <Rectangle.Style>
                                                <Style TargetType="{x:Type Rectangle}">
                                                    <Setter Property="Fill" Value="{DynamicResource GrayNormal}"/>

                                                    <!--Set the Icon Color after some triggers-->
                                                    <Style.Triggers>

                                                        <!--Mouse Over Trigger-->
                                                        <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="True">
                                                            <Setter Property="Fill" Value="{StaticResource GrayHover}"/>
                                                        </DataTrigger>

                                                        <!--Mouse Over and Click Trigger-->
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="True" />
                                                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="True" />
                                                            </MultiDataTrigger.Conditions>
                                                            <MultiDataTrigger.Setters>
                                                                <Setter Property="Fill" Value="{DynamicResource highlight3}"/>
                                                            </MultiDataTrigger.Setters>
                                                        </MultiDataTrigger>

                                                    </Style.Triggers>
                                                </Style>
                                            </Rectangle.Style>

                                            <!--Set the Icon in the Rectangle as Visual brush-->
                                            <Rectangle.OpacityMask>
                                                <VisualBrush Visual="{StaticResource appbar_close}" />
                                            </Rectangle.OpacityMask>


                                        </Rectangle>
                                    </ControlTemplate>
                                </Button.Template>
                            </Button>

                        </StackPanel>

                    </Grid>
                </DataTemplate>
            </TabControl.ItemTemplate>


            <!--Tab Control "Content"-->
            <!--<TabControl.ContentTemplateSelector>
                <Local:GeneratorDataTemplateSelector/>
            </TabControl.ContentTemplateSelector>-->


        </TabControl>


    </Grid>


</UserControl>
